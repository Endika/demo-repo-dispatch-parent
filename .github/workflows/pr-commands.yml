name: PR Commands Handler

on:
  issue_comment:
    types: [created]

jobs:
  check-command:
    if: github.event.issue.pull_request && startsWith(github.event.comment.body, '/')
    runs-on: ubuntu-latest
    outputs:
      command: ${{ steps.parse.outputs.command }}
      should_dispatch: ${{ steps.parse.outputs.should_dispatch }}
      pr_number: ${{ steps.parse.outputs.pr_number }}
      
    steps:
    - name: Check permissions
      uses: actions/github-script@v7
      with:
        script: |
          const { data: permissions } = await github.rest.repos.getCollaboratorPermissionLevel({
            owner: context.repo.owner,
            repo: context.repo.repo,
            username: context.actor
          });
          
          if (!['write', 'admin'].includes(permissions.permission)) {
            throw new Error('User does not have permission to execute commands');
          }
          
          console.log(`User ${context.actor} has ${permissions.permission} permission`);
    
    - name: Parse command
      id: parse
      run: |
        COMMENT_BODY="${{ github.event.comment.body }}"
        echo "pr_number=${{ github.event.issue.number }}" >> $GITHUB_OUTPUT
        
        # Extract command (first line, remove leading slash)
        COMMAND=$(echo "$COMMENT_BODY" | head -n1 | sed 's|^/||')
        echo "command=$COMMAND" >> $GITHUB_OUTPUT
        
        # Check if it's the supported command
        if [ "$COMMAND" = "demo-build" ]; then
          echo "should_dispatch=true" >> $GITHUB_OUTPUT
          echo "✅ Command 'demo-build' recognized"
        else
          echo "should_dispatch=false" >> $GITHUB_OUTPUT
          echo "❌ Only '/demo-build' command is supported"
        fi

  dispatch-from-pr:
    needs: check-command
    if: needs.check-command.outputs.should_dispatch == 'true'
    runs-on: ubuntu-latest
    environment: CI
    strategy:
      matrix:
        repo: 
          - 'endika/demo-repo-dispatch-child'
    
    steps:
    - name: Get PR details
      id: pr-details
      uses: actions/github-script@v7
      with:
        script: |
          const { data: pullRequest } = await github.rest.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: ${{ needs.check-command.outputs.pr_number }}
          });
          
          core.setOutput('pr_title', pullRequest.title);
          core.setOutput('pr_branch', pullRequest.head.ref);
          core.setOutput('pr_sha', pullRequest.head.sha);
    
    - name: Trigger builds in child repositories
      uses: peter-evans/repository-dispatch@v3
      with:
        token: ${{ secrets.PAT }}
        repository: ${{ matrix.repo }}
        event-type: trigger-build
        client-payload: |
          {
            "ref": "${{ steps.pr-details.outputs.pr_branch }}",
            "sha": "${{ steps.pr-details.outputs.pr_sha }}",
            "actor": "${{ github.event.comment.user.login }}",
            "parent_repository": "${{ github.repository }}",
            "message": "Build requested from PR #${{ needs.check-command.outputs.pr_number }}",
            "timestamp": "${{ github.event.comment.created_at }}",
            "pr_number": "${{ needs.check-command.outputs.pr_number }}",
            "pr_title": "${{ steps.pr-details.outputs.pr_title }}",
            "command": "${{ needs.check-command.outputs.command }}",
            "is_pr_command": "true"
          }

 